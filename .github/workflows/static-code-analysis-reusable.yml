name: analysis
run-name: Static Code Analysis - ${{ github.event.pull_request.title || github.event.head_commit.message || github.ref }}

on:
  workflow_call:
    inputs:
      elixir:
        required: true
        type: string
      otp:
        required: true
        type: string
      os:
        type: string
        default: ubuntu-latest

jobs:
  static_code_analysis:
    name: Static Code Analysis Elixir ${{ inputs.elixir }} OTP ${{ inputs.otp }} - ${{ inputs.os }}
    runs-on: ${{ inputs.os }}

    steps:
      - uses: actions/checkout@v4

      - name: Setup Elixir
        uses: erlef/setup-beam@v1.17.5
        with:
          otp-version: ${{ inputs.otp }}
          elixir-version: ${{ inputs.elixir }}

      - name: Restore dependencies cache
        id: mix_cache
        uses: actions/cache/restore@v4
        with:
          path: |
            deps
            _build
          key: ${{ runner.os }}-${{ inputs.otp }}-${{ inputs.elixir }}-${{ hashFiles('**/mix.lock') }}
          restore-keys: ${{ runner.os }}-${{ inputs.elixir }}-${{ inputs.otp }}-mix-

      - name: Restore PLT cache
        uses: actions/cache/restore@v4
        id: plt_cache
        with:
          path: priv/plts
          key: plt-${{ runner.os }}-${{ inputs.elixir }}-${{ inputs.otp }}-${{ hashFiles('**/mix.lock') }}
          restore-keys: plt-${{ runner.os }}-${{ inputs.elixir }}-${{ inputs.otp }}-plt-

      - name: Create PLTs
        if: steps.plt_cache.outputs.cache-hit != 'true'
        run: mix dialyzer --plt

      - name: Save PLT cache
        uses: actions/cache/save@v4
        id: plt_cache_save
        if: steps.plt_cache.outputs.cache-hit != 'true'
        with:
          path: priv/plts
          key: plt-${{ runner.os }}-${{ inputs.elixir }}-${{ inputs.otp }}-${{ hashFiles('**/mix.lock') }}

      - name: Run Dialyzer
        run: mix dialyzer --format github
